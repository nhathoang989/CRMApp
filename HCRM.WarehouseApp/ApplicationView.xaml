<Window x:Class="HCRM.WarehouseApp.ApplicationView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:HCRM.WarehouseApp"        
        xmlns:views="clr-namespace:HCRM.WarehouseApp.Views"
        xmlns:othersViews="clr-namespace:HCRM.WarehouseApp.Views.OthersViews"
        xmlns:converter="clr-namespace:HCRM.WarehouseApp.Views.Converters"
        xmlns:viewModels="clr-namespace:HCRM.WarehouseApp.ViewModels"
        xmlns:productViewModels="clr-namespace:HCRM.WarehouseApp.ViewModels.ProductViewModels"
        xmlns:othersViewModels="clr-namespace:HCRM.WarehouseApp.ViewModels.OthersViewModels"
        xmlns:productViews="clr-namespace:HCRM.WarehouseApp.Views.ProductViews"
        xmlns:materialMenu="clr-namespace:MaterialMenu;assembly=MaterialMenu"
        Title="HCRM - Home" Height="600" Width="960"
        ResizeMode="CanResizeWithGrip" ShowInTaskbar="True" SizeToContent="Manual" WindowStartupLocation="CenterScreen"
        WindowState="Maximized"
        Closed="Window_Closed"
        >

    <Window.Resources>
        <converter:NullableBoolConverter x:Key="booleanConverter" />
        <Style TargetType="MenuItem">
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True" >
                    <Setter Property="Background" Value="{DynamicResource SelectedBackgroundBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <DataTemplate DataType="{x:Type viewModels:HomeViewModel}">
            <views:Home />
        </DataTemplate>
        
        <DataTemplate DataType="{x:Type productViewModels:ProductPageViewModel}">
            <productViews:ProductPageView/>
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewModels:LoginViewModel}">
            <views:LoginWindow />
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewModels:SaleFormViewModel}">
            <views:SaleFormView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type othersViewModels:EmployeePageViewModel}">
            <othersViews:EmployeePageView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type othersViewModels:CustomerPageViewModel}">
            <othersViews:CustomerPageView />
        </DataTemplate>
    </Window.Resources>

    <DockPanel>
        <Border DockPanel.Dock="Left" Height="auto" x:Name="MainMenuBorder" BorderThickness="0" Grid.Row="2" Width="300" HorizontalAlignment="Center" >
            <materialMenu:SideMenu Name="MainMenu" Theme="Danger" ButtonBackground="#FF567DB1">
                <ScrollViewer ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Auto" Background="{DynamicResource InputBackgroundBrush}">
                    <StackPanel Orientation="Vertical">
                        <Border Background="#337AB5">
                            <Grid Margin="10">
                                <TextBox Height="100" BorderThickness="0" Background="Transparent"
                                VerticalContentAlignment="Center" FontFamily="Calibri" FontSize="18"
                                Foreground="WhiteSmoke" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center">Welcome</TextBox>
                            </Grid>
                        </Border>
                        <!--<ItemsControl ItemsSource="{Binding PageViewModels}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <MenuItem Header="{Binding Model.PageTitle}" Command="{Binding DataContext.ChangePageCommand, 
                                        RelativeSource={RelativeSource AncestorType={x:Type materialMenu:SideMenu}}}"
                                        CommandParameter="{Binding }"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>-->
                        <!--<MenuItem Header="{Binding Key}" ItemsSource="{Binding PageViewModels}">
                            <MenuItem.ItemContainerStyle>
                                <Style TargetType="MenuItem">
                                    <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=MenuItem}, Path=DataContext.ViewSwitchCommand}" />
                                    <Setter Property="CommandParameter" Value="{Binding}" />
                                </Style>
                            </MenuItem.ItemContainerStyle>
                        </MenuItem>-->
                    </StackPanel>
                </ScrollViewer>
            </materialMenu:SideMenu>
        </Border>
        <Border x:Name="MainScreen" Height="auto" BorderThickness="0" Grid.Row="3">
            <Grid Visibility="Visible">
                <Grid.RowDefinitions>
                    <RowDefinition Height="120"/>
                    <RowDefinition Height="*" MinHeight="330"/>
                    <RowDefinition Height="120"/>
                </Grid.RowDefinitions>

                <Border Height="120"  Grid.Row="0" VerticalAlignment="Top">
                    <Grid Margin="10">
                        <TextBox Height="100" BorderThickness="0" Background="Transparent"
                                VerticalContentAlignment="Center" FontFamily="Calibri" FontSize="32"
                                FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center">Header Company Name</TextBox>
                    </Grid>
                </Border>
                <Border Grid.Row="1">
                    <xctk:BusyIndicator Name="busyIndicator" IsBusy="{Binding IsBusy}">
                        <xctk:BusyIndicator.BusyContent>
                            <StackPanel>
                                <TextBlock HorizontalAlignment="Center">Please wait...</TextBlock>
                                <!--<Button Content="Abort" Name="btnAbort" HorizontalAlignment="Center"/>-->
                            </StackPanel>
                        </xctk:BusyIndicator.BusyContent>

                        <xctk:BusyIndicator.Content>
                            <ScrollViewer ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Auto" Background="{DynamicResource InputBackgroundBrush}">
                                <StackPanel Background="White">                                
                                    <ContentControl Content="{Binding CurrentPageViewModel}" />                                
                                </StackPanel>
                            </ScrollViewer>
                        </xctk:BusyIndicator.Content>

                    </xctk:BusyIndicator>
                </Border>
                <Border Grid.Row="2" Height="120"   VerticalAlignment="Bottom">
                    <Grid Margin="10">
                        <TextBox Height="100" BorderThickness="0" Background="Transparent"
                                VerticalContentAlignment="Center" FontFamily="Calibri" FontSize="32"
                                FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center">Footer</TextBox>
                    </Grid>
                </Border>
            </Grid>

        </Border>
        <!--<Border DockPanel.Dock="Left" BorderBrush="Black" BorderThickness="0,0,1,0">
            <ItemsControl ItemsSource="{Binding PageViewModels}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Button Content="{Binding Title}"                                   
                                Command="{Binding DataContext.ChangePageCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                CommandParameter="{Binding Key}"
                                Margin="2,5"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Border>

        <ContentControl Content="{Binding CurrentPageViewModel}" />-->
    </DockPanel>
</Window>
